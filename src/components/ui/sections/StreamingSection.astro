---
import { getSectionData } from "./section-utils";
import type { SectionConfig } from "./section-utils";

interface Props {
    config: SectionConfig;
}

const { config } = Astro.props as Props;

// Create promise for streaming - non-blocking
const sectionPromise = getSectionData(config);
---

<section class="flex flex-col gap-6" id={config.key}>
    <div class="flex flex-wrap items-baseline justify-between gap-3">
        <div>
            <h2 class="text-xl font-semibold tracking-tight sm:text-2xl">
                {config.title}
            </h2>
            <p class="text-sm text-white/60">
                {config.subtitle}
            </p>
        </div>
        <a
            href={`/danh-sach/${config.typeList}`}
            class="text-sm font-medium text-sky-300 transition hover:text-sky-100"
        >
            Xem tất cả →
        </a>
    </div>

    <!-- Streaming content - renders when promise resolves -->
    {
        sectionPromise.then((section) => {
            if (section.items.length) {
                return (
                    <div
                        class={`-mx-2 flex gap-4 overflow-x-auto pb-2 pl-2 pr-4 ${
                            section.layout === "landscape"
                                ? "snap-x snap-mandatory"
                                : ""
                        }`}
                    >
                        {section.items.map((item, index) => {
                            const imageUrl =
                                section.layout === "landscape"
                                    ? item.thumb_url || item.poster_url
                                    : item.poster_url || item.thumb_url;

                            return (
                                <article
                                    class={`group relative shrink-0 overflow-hidden rounded-xl bg-slate-900/60 ring-white/10 transition duration-200 hover:ring-2 hover:ring-white/30 mt-2 ${
                                        section.layout === "landscape"
                                            ? "w-[350px] snap-start"
                                            : "w-[230px]"
                                    }`}
                                >
                                    <a
                                        href={`/phim/${item.slug}`}
                                        class="block h-full"
                                    >
                                        <div
                                            class={`${
                                                section.layout === "landscape"
                                                    ? "aspect-[16/9]"
                                                    : "aspect-[3/4]"
                                            } relative`}
                                        >
                                            {imageUrl ? (
                                                <img
                                                    src={`https://wsrv.nl/?url=https://phimimg.com/${imageUrl}&w=400&h=225&output=webp`}
                                                    alt={item.name}
                                                    loading={
                                                        index < 3
                                                            ? "eager"
                                                            : "lazy"
                                                    }
                                                    decoding="async"
                                                    width="400"
                                                    height="225"
                                                    class="h-full w-full object-cover"
                                                />
                                            ) : (
                                                <div class="flex h-full w-full items-center justify-center bg-slate-800 text-xs text-white/50">
                                                    No Image
                                                </div>
                                            )}
                                            <div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-slate-950/70 via-slate-950/10" />
                                            <div class="pointer-events-none absolute left-3 top-3 rounded-full bg-slate-950/70 px-3 py-1 text-xs font-medium text-white/80">
                                                {item.year ?? "N/A"}
                                            </div>
                                        </div>
                                        {section.layout ===
                                        "landscape" ? null : (
                                            <div class="space-y-1 px-4 py-4">
                                                <h3 class="line-clamp-2 text-sm font-semibold text-white transition group-hover:text-sky-200">
                                                    {item.name}
                                                </h3>
                                                <p class="text-xs text-white/60 line-clamp-1">
                                                    {item.origin_name}
                                                </p>
                                            </div>
                                        )}
                                    </a>
                                </article>
                            );
                        })}
                    </div>
                );
            } else {
                return (
                    <div class="rounded-2xl border border-white/10 bg-slate-900/60 px-6 py-12 text-center text-sm text-white/70">
                        {section.error ?? "Không có dữ liệu để hiển thị."}
                    </div>
                );
            }
        })
    }
</section>
